---
name: CI

on:
  pull_request:
  push:
    branches:
      - master

jobs:

  lint:
    name: Lint Code Base
    runs-on: ubuntu-18.04

    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Setup Environment
        run: |
          mkdir .github/linters
          cp phpcs.xml.dist .github/linters/phpcs.xml

      - name: Lint Code Base
        uses: github/super-linter@v4.0.2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          VALIDATE_PHP_PHPSTAN: false
          VALIDATE_PHP_PSALM: false

  build-test:
    needs: lint
    name: Test Code Base
    runs-on: ubuntu-18.04
    strategy:
      matrix:
        php:
          - php7.3
          - php7.4

    steps:

      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Setup Environment
        run: |
          cp .env.ci .env.local

      - name: Get Composer Cache Directory
        id: composer-cache
        run: |
          echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: Cache Composer Downloads
        uses: actions/cache@v2.1.5
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-

      - name: Cache PHP dependencies
        uses: actions/cache@v2.1.5
        with:
          path: vendor
          key: ${{ runner.OS }}-build-${{ hashFiles('**/composer.lock') }}

      - name: Cache Symfony database
        uses: actions/cache@v2.1.5
        id: symfony-cache-db
        with:
          path: ~/.symfony/cache
          key: db

      - name: Run Symfony security checker
        uses: symfonycorp/security-checker-action@v2

      - name: Install PHP dependencies
        run: |
          ${{ matrix.php }} /usr/bin/composer install

      - name: Validate Symfony files
        run: |
          ${{ matrix.php }} /usr/bin/composer run lint

      - name: PHPUnit Tests
        run: |
          ${{ matrix.php }} /usr/bin/composer run test
